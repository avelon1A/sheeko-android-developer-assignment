name: Android CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: 17

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          gradle-${{ runner.os }}-

    - name: Download Android SDK
      uses: android-actions/setup-android@v2
      with:
        api-level: ${{ matrix.api-level }}
        target: default
        arch: ${{ matrix.abi }}
        build-tools: "30.0.3"

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew build --stacktrace

    - name: Run Unit Tests
      run: ./gradlew test --stacktrace

    - name: Lint
      run: ./gradlew lint

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: app-${{ matrix.target }}
        path: app/build/outputs/

    - name: Create GitHub Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        files: app/build/outputs/**/*.apk
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Upload APK to Release
      if: steps.create_release.outputs.upload_url != ''
      run: |
        echo "Uploading APK to release"
        curl -XPOST -H "Authorization: token ${{ secrets.github }}" \
        -F "file=@app/build/outputs/apk/release/app-release.apk" \
        "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.create_release.outputs.id }}/assets?name=app-release.apk"
